{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/Components/Keyboard/Keyboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Keyboard.scss\";\nimport PropTypes from \"prop-types\";\nimport gameUtils from \"../../Utils/gameUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Keyboard(_ref) {\n  _s();\n\n  let {\n    input,\n    updateInput,\n    row,\n    updateRow,\n    wordList,\n    updateWordList,\n    word,\n    usedLetters,\n    updateUsedLetters,\n    savedColor,\n    updateSavedColor,\n    updateShowWinPopUp,\n    room,\n    socket\n  } = _ref;\n\n  // onclick function for letter keys\n  const keyClick = letter => {\n    if (input.length < 5) updateInput(prev => prev + letter);\n  }; // onclick function of backspace key\n\n\n  const backspaceClick = () => {\n    updateInput(input.substring(0, input.length - 1));\n  };\n\n  const sendGameData = () => {\n    const gameData = {\n      room: room,\n      row: row,\n      wordList: wordList,\n      savedColor: savedColor\n    };\n    socket.emit(\"send_data\", gameData);\n  }; // onclick function of enter key\n\n\n  const enterClick = () => {\n    // if this is not the last attempt and input is valid\n    if (input.length == 5) {\n      let feedback = gameUtils.inputCheck(word, input);\n\n      if (gameUtils.isCorrect(feedback)) {\n        updateShowWinPopUp(true);\n      } else if (row == 5) {\n        alert(`game over, the correct word is ${word}`);\n      }\n\n      let tempcolor = gameUtils.colorArray(feedback);\n      const tempArray = savedColor;\n      const temp = wordList;\n      temp[row] = input;\n      tempArray[row] = tempcolor;\n      let oldLetters = gameUtils.usedLetters(input, feedback, usedLetters);\n      updateUsedLetters(oldLetters);\n      updateWordList(temp);\n      updateSavedColor(tempArray);\n      updateRow(prev => prev + 1);\n\n      if (row != 5) {\n        updateInput(\"\");\n      }\n\n      sendGameData();\n    } else {\n      alert(\"word incomplete\");\n    }\n  }; // only accept valide keys\n\n\n  function keyValidator(userInput) {\n    return /^[a-z]+$/.test(userInput) || userInput == \"Enter\" || userInput == \"Backspace\";\n  }\n\n  function keyPress(e) {\n    if (keyValidator(e.key)) {\n      if (/^[a-z]+$/.test(e.key)) {\n        if (input.length < 5) updateInput(prev => prev + e.key.toUpperCase());\n      } else if (e.key == \"Enter\") {\n        enterClick();\n      } else {\n        // backspace\n        backspaceClick();\n      }\n    }\n  } // allow physical keyboard input, it should do exactly the same thing as the virtual keyboard.\n\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", keyPress);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard-style\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"Q\", usedLetters),\n      onClick: () => keyClick(\"Q\"),\n      children: \"Q\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"W\", usedLetters),\n      onClick: () => keyClick(\"W\"),\n      children: \"W\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"E\", usedLetters),\n      onClick: () => keyClick(\"E\"),\n      children: \"E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"R\", usedLetters),\n      onClick: () => keyClick(\"R\"),\n      children: \"R\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"T\", usedLetters),\n      onClick: () => keyClick(\"T\"),\n      children: \"T\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"Y\", usedLetters),\n      onClick: () => keyClick(\"Y\"),\n      children: \"Y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"U\", usedLetters),\n      onClick: () => keyClick(\"U\"),\n      children: \"U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"I\", usedLetters),\n      onClick: () => keyClick(\"I\"),\n      children: \"I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"O\", usedLetters),\n      onClick: () => keyClick(\"O\"),\n      children: \"O\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"P\", usedLetters),\n      onClick: () => keyClick(\"P\"),\n      children: \"P\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"A\", usedLetters),\n      onClick: () => keyClick(\"A\"),\n      children: \"A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"S\", usedLetters),\n      onClick: () => keyClick(\"S\"),\n      children: \"S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"D\", usedLetters),\n      onClick: () => keyClick(\"D\"),\n      children: \"D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"F\", usedLetters),\n      onClick: () => keyClick(\"F\"),\n      children: \"F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"G\", usedLetters),\n      onClick: () => keyClick(\"G\"),\n      children: \"G\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"H\", usedLetters),\n      onClick: () => keyClick(\"H\"),\n      children: \"H\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"J\", usedLetters),\n      onClick: () => keyClick(\"J\"),\n      children: \"J\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"K\", usedLetters),\n      onClick: () => keyClick(\"K\"),\n      children: \"K\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"L\", usedLetters),\n      onClick: () => keyClick(\"L\"),\n      children: \"L\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"big-key\",\n      onClick: () => backspaceClick(),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        children: \"backspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"Z\", usedLetters),\n      onClick: () => keyClick(\"Z\"),\n      children: \"Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"X\", usedLetters),\n      onClick: () => keyClick(\"X\"),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"C\", usedLetters),\n      onClick: () => keyClick(\"C\"),\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"V\", usedLetters),\n      onClick: () => keyClick(\"V\"),\n      children: \"V\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"B\", usedLetters),\n      onClick: () => keyClick(\"B\"),\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"N\", usedLetters),\n      onClick: () => keyClick(\"N\"),\n      children: \"N\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: gameUtils.eachKeyColor(\"M\", usedLetters),\n      onClick: () => keyClick(\"M\"),\n      children: \"M\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"big-key\",\n      onClick: () => enterClick(),\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Keyboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Keyboard;\nKeyboard.propTypes = {\n  input: PropTypes.string,\n  row: PropTypes.number,\n  updateInput: PropTypes.func,\n  updateRow: PropTypes.func,\n  updateWordList: PropTypes.func,\n  wordList: PropTypes.array,\n  word: PropTypes.string,\n  usedLetters: PropTypes.array,\n  updateUsedLetters: PropTypes.func,\n  updateSavedColor: PropTypes.func,\n  savedColor: PropTypes.array,\n  updateShowWinPopUp: PropTypes.func,\n  socket: PropTypes.func,\n  room: PropTypes.string\n};\nexport default Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/Components/Keyboard/Keyboard.js"],"names":["React","PropTypes","gameUtils","Keyboard","input","updateInput","row","updateRow","wordList","updateWordList","word","usedLetters","updateUsedLetters","savedColor","updateSavedColor","updateShowWinPopUp","room","socket","keyClick","letter","length","prev","backspaceClick","substring","sendGameData","gameData","emit","enterClick","feedback","inputCheck","isCorrect","alert","tempcolor","colorArray","tempArray","temp","oldLetters","keyValidator","userInput","test","keyPress","e","key","toUpperCase","useEffect","window","addEventListener","removeEventListener","eachKeyColor","propTypes","string","number","func","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Keyboard.scss\";\nimport PropTypes from \"prop-types\";\nimport gameUtils from \"../../Utils/gameUtils\";\n\nfunction Keyboard({\n  input,\n  updateInput,\n  row,\n  updateRow,\n  wordList,\n  updateWordList,\n  word,\n  usedLetters,\n  updateUsedLetters,\n  savedColor,\n  updateSavedColor,\n  updateShowWinPopUp,\n  room,\n  socket,\n}) {\n  // onclick function for letter keys\n  const keyClick = (letter) => {\n    if (input.length < 5) updateInput((prev) => prev + letter);\n  };\n\n  // onclick function of backspace key\n  const backspaceClick = () => {\n    updateInput(input.substring(0, input.length - 1));\n  };\n\n  const sendGameData = () => {\n    const gameData = {\n      room: room,\n      row: row,\n      wordList: wordList,\n      savedColor: savedColor,\n    };\n    socket.emit(\"send_data\", gameData);\n  };\n\n  // onclick function of enter key\n  const enterClick = () => {\n    // if this is not the last attempt and input is valid\n    if (input.length == 5) {\n      let feedback = gameUtils.inputCheck(word, input);\n      if (gameUtils.isCorrect(feedback)) {\n        updateShowWinPopUp(true);\n      } else if (row == 5) {\n        alert(`game over, the correct word is ${word}`);\n      }\n      let tempcolor = gameUtils.colorArray(feedback);\n      const tempArray = savedColor;\n      const temp = wordList;\n      temp[row] = input;\n      tempArray[row] = tempcolor;\n      let oldLetters = gameUtils.usedLetters(input, feedback, usedLetters);\n      updateUsedLetters(oldLetters);\n      updateWordList(temp);\n      updateSavedColor(tempArray);\n      updateRow((prev) => prev + 1);\n      if (row != 5) {\n        updateInput(\"\");\n      }\n      sendGameData();\n    } else {\n      alert(\"word incomplete\");\n    }\n  };\n\n  // only accept valide keys\n  function keyValidator(userInput) {\n    return (\n      /^[a-z]+$/.test(userInput) ||\n      userInput == \"Enter\" ||\n      userInput == \"Backspace\"\n    );\n  }\n\n  function keyPress(e) {\n    if (keyValidator(e.key)) {\n      if (/^[a-z]+$/.test(e.key)) {\n        if (input.length < 5) updateInput((prev) => prev + e.key.toUpperCase());\n      } else if (e.key == \"Enter\") {\n        enterClick();\n      } else {\n        // backspace\n        backspaceClick();\n      }\n    }\n  }\n\n  // allow physical keyboard input, it should do exactly the same thing as the virtual keyboard.\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", keyPress);\n    };\n  });\n  return (\n    <div className=\"keyboard-style\">\n      <link\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n        rel=\"stylesheet\"\n      ></link>\n      <button\n        className={gameUtils.eachKeyColor(\"Q\", usedLetters)}\n        onClick={() => keyClick(\"Q\")}\n      >\n        Q\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"W\", usedLetters)}\n        onClick={() => keyClick(\"W\")}\n      >\n        W\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"E\", usedLetters)}\n        onClick={() => keyClick(\"E\")}\n      >\n        E\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"R\", usedLetters)}\n        onClick={() => keyClick(\"R\")}\n      >\n        R\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"T\", usedLetters)}\n        onClick={() => keyClick(\"T\")}\n      >\n        T\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"Y\", usedLetters)}\n        onClick={() => keyClick(\"Y\")}\n      >\n        Y\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"U\", usedLetters)}\n        onClick={() => keyClick(\"U\")}\n      >\n        U\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"I\", usedLetters)}\n        onClick={() => keyClick(\"I\")}\n      >\n        I\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"O\", usedLetters)}\n        onClick={() => keyClick(\"O\")}\n      >\n        O\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"P\", usedLetters)}\n        onClick={() => keyClick(\"P\")}\n      >\n        P\n      </button>\n      <br></br>\n      <button\n        className={gameUtils.eachKeyColor(\"A\", usedLetters)}\n        onClick={() => keyClick(\"A\")}\n      >\n        A\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"S\", usedLetters)}\n        onClick={() => keyClick(\"S\")}\n      >\n        S\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"D\", usedLetters)}\n        onClick={() => keyClick(\"D\")}\n      >\n        D\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"F\", usedLetters)}\n        onClick={() => keyClick(\"F\")}\n      >\n        F\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"G\", usedLetters)}\n        onClick={() => keyClick(\"G\")}\n      >\n        G\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"H\", usedLetters)}\n        onClick={() => keyClick(\"H\")}\n      >\n        H\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"J\", usedLetters)}\n        onClick={() => keyClick(\"J\")}\n      >\n        J\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"K\", usedLetters)}\n        onClick={() => keyClick(\"K\")}\n      >\n        K\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"L\", usedLetters)}\n        onClick={() => keyClick(\"L\")}\n      >\n        L\n      </button>\n      <br></br>\n      {/* eslint-disable-next-line react/no-unknown-property */}\n      <button className=\"big-key\" onClick={() => backspaceClick()}>\n        <i className=\"material-icons\">backspace</i>\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"Z\", usedLetters)}\n        onClick={() => keyClick(\"Z\")}\n      >\n        Z\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"X\", usedLetters)}\n        onClick={() => keyClick(\"X\")}\n      >\n        X\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"C\", usedLetters)}\n        onClick={() => keyClick(\"C\")}\n      >\n        C\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"V\", usedLetters)}\n        onClick={() => keyClick(\"V\")}\n      >\n        V\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"B\", usedLetters)}\n        onClick={() => keyClick(\"B\")}\n      >\n        B\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"N\", usedLetters)}\n        onClick={() => keyClick(\"N\")}\n      >\n        N\n      </button>\n      <button\n        className={gameUtils.eachKeyColor(\"M\", usedLetters)}\n        onClick={() => keyClick(\"M\")}\n      >\n        M\n      </button>\n      <button className=\"big-key\" onClick={() => enterClick()}>\n        Enter\n      </button>\n    </div>\n  );\n}\n\nKeyboard.propTypes = {\n  input: PropTypes.string,\n  row: PropTypes.number,\n  updateInput: PropTypes.func,\n  updateRow: PropTypes.func,\n  updateWordList: PropTypes.func,\n  wordList: PropTypes.array,\n  word: PropTypes.string,\n  usedLetters: PropTypes.array,\n  updateUsedLetters: PropTypes.func,\n  updateSavedColor: PropTypes.func,\n  savedColor: PropTypes.array,\n  updateShowWinPopUp: PropTypes.func,\n  socket: PropTypes.func,\n  room: PropTypes.string,\n};\n\nexport default Keyboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/MultiplayerPage/MultiplayerPage.js\",\n    _s = $RefreshSig$();\n\nimport io from \"socket.io-client\";\nimport React, { useState } from \"react\";\nimport \"./MultiplayerPage.scss\";\nimport GameContent from \"./GameContent\";\nimport Header from \"../Components/Header/Header\";\nimport HamburgerMenu from \"../Components/HamburgerMenu/HamburgerMenu\";\nimport HamburgerBlur from \"../Components/HamburgerMenu/HamburgerBlur\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction MultiplayerPage() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showGame, setShowGame] = useState(false); // show the grid and keyboard after user entering the room\n\n  const [inGame, setInGame] = useState(false);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      const roomData = {\n        room: room,\n        user: username\n      };\n      socket.emit(\"join_room\", roomData);\n      setShowGame(true);\n    } else {\n      alert(\"Please enter user ID and room ID\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", keyPress);\n    };\n  });\n\n  function keyPress(e) {\n    if (e.key == \"Enter\" && !inGame) {\n      joinRoom();\n      setInGame(true);\n    }\n  }\n  /* Hamburger Menu Implementation */\n\n\n  let [hamburgerOpen, setHamburgerOpen] = useState(false);\n\n  const hamburgerOpenHandler = () => {\n    setHamburgerOpen(!hamburgerOpen);\n  };\n\n  let hamburgerMenu = /*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n\n  let hamburgerBlur;\n\n  if (hamburgerOpen) {\n    hamburgerMenu = /*#__PURE__*/_jsxDEV(HamburgerMenu, {\n      open: hamburgerOpen,\n      close: hamburgerOpenHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n    hamburgerBlur = /*#__PURE__*/_jsxDEV(HamburgerBlur, {\n      close: hamburgerOpenHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiplayer-style\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      click: hamburgerOpenHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), hamburgerMenu, hamburgerBlur, !showGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join a game room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your ID...\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room name...\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => joinRoom(),\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameContent, {\n      socket: socket,\n      username: username,\n      room: room,\n      word: \"APPLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiplayerPage, \"5cbbe2e9m63RPKremhB+U6f9C1A=\");\n\n_c = MultiplayerPage;\nexport default MultiplayerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiplayerPage\");","map":{"version":3,"sources":["/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/MultiplayerPage/MultiplayerPage.js"],"names":["io","React","useState","GameContent","Header","HamburgerMenu","HamburgerBlur","socket","connect","MultiplayerPage","username","setUsername","room","setRoom","showGame","setShowGame","inGame","setInGame","joinRoom","roomData","user","emit","alert","useEffect","window","addEventListener","keyPress","removeEventListener","e","key","hamburgerOpen","setHamburgerOpen","hamburgerOpenHandler","hamburgerMenu","hamburgerBlur","event","target","value"],"mappings":"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","sourcesContent":["import io from \"socket.io-client\";\nimport React, { useState } from \"react\";\nimport \"./MultiplayerPage.scss\";\nimport GameContent from \"./GameContent\";\nimport Header from \"../Components/Header/Header\";\nimport HamburgerMenu from \"../Components/HamburgerMenu/HamburgerMenu\";\nimport HamburgerBlur from \"../Components/HamburgerMenu/HamburgerBlur\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction MultiplayerPage() {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showGame, setShowGame] = useState(false); // show the grid and keyboard after user entering the room\n  const [inGame, setInGame] = useState(false);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      const roomData = {\n        room: room,\n        user: username,\n      };\n      socket.emit(\"join_room\", roomData);\n      setShowGame(true);\n    } else {\n      alert(\"Please enter user ID and room ID\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", keyPress);\n    };\n  });\n\n  function keyPress(e) {\n    if (e.key == \"Enter\" && !inGame) {\n      joinRoom();\n      setInGame(true);\n    }\n  }\n\n  /* Hamburger Menu Implementation */\n  let [hamburgerOpen, setHamburgerOpen] = useState(false);\n  const hamburgerOpenHandler = () => {\n    setHamburgerOpen(!hamburgerOpen);\n  };\n  let hamburgerMenu = <HamburgerMenu />;\n  let hamburgerBlur;\n  if (hamburgerOpen) {\n    hamburgerMenu = (\n      <HamburgerMenu open={hamburgerOpen} close={hamburgerOpenHandler} />\n    );\n    hamburgerBlur = <HamburgerBlur close={hamburgerOpenHandler} />;\n  }\n\n  return (\n    <div className=\"multiplayer-style\">\n      <Header click={hamburgerOpenHandler} />\n      {hamburgerMenu}\n      {hamburgerBlur}\n      {!showGame ? (\n        <div className=\"join-game-container\">\n          <h3>Join a game room</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Your ID...\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room name...\"\n            onChange={(event) => {\n              setRoom(event.target.value);\n            }}\n          />\n          <button onClick={() => joinRoom()}>Join</button>\n        </div>\n      ) : (\n        <GameContent\n          socket={socket}\n          username={username}\n          room={room}\n          word={\"APPLE\"}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default MultiplayerPage;\n"]},"metadata":{},"sourceType":"module"}
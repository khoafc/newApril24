{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/MultiplayerPage/GameContent.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from \"react\";\nimport NestedGrid from \"../Components/GameGrid/GameGrid\";\nimport Keyboard from \"../Components/Keyboard/Keyboard\";\nimport WinPopUp from \"../HomePage/WinPopUp\";\nimport \"./GameContent.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameContent(_ref) {\n  _s();\n\n  let {\n    socket,\n    room,\n    word\n  } = _ref;\n  // states for the user\n  const [input, setInput] = useState(\"\"); // user's input of the current row\n\n  const [row, setRow] = useState(0); // current row number, first row is row 0\n\n  const [wordList, setWordList] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]); // the words that the user entered so far\n\n  const [usedLetters, setUsedLetters] = useState([\"\"]); // feedback on each letter, N Y P\n\n  const [showWinPopUp, setShowWinPopUp] = useState(false); // whether or not show the win pop-up window\n\n  const [savedColor, setSavedColor] = useState([[\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"]]);\n  const [savedColorB, setSavedColorB] = useState([[\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"]]);\n  const [rowB, setRowB] = useState(0);\n\n  function updateInput(replace) {\n    setInput(replace);\n  }\n\n  function updateRow(value) {\n    setRow(value);\n  }\n\n  function updateWordList(newArray) {\n    setWordList(newArray);\n  }\n\n  function updateUsedLetters(newArray) {\n    setUsedLetters(newArray);\n  }\n\n  function updateShowWinPopUp(value) {\n    setShowWinPopUp(value);\n  }\n\n  function updateSavedColor(newArray) {\n    setSavedColor(newArray);\n  } // const sendGameData = () => {\n  //   const gameData = {\n  //     room: room,\n  //     username: username,\n  //     row: row,\n  //     wordList: wordList,\n  //     savedColor: savedColor,\n  //   };\n  //   socket.emit(\"send_data\", gameData);\n  // };\n\n\n  const sendGameData = () => {\n    const gameData = {\n      room: room,\n      row: row,\n      wordList: wordList,\n      savedColor: savedColor\n    };\n    socket.emit(\"send_data\", gameData);\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_data\", data => {\n      console.log(\"received data from use Effect\", data);\n      setRowB(data.row);\n      setSavedColorB(data.savedColor);\n    });\n  }, [socket]);\n  useEffect(() => {\n    sendGameData();\n  }, [row, savedColorB]); // function keyPress(e) {\n  //   if (e.key == \"Enter\") {\n  //     sendGameData();\n  //   }\n  // }\n  // React.useEffect(() => {\n  //   window.addEventListener(\"keydown\", keyPress);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-one\",\n        children: /*#__PURE__*/_jsxDEV(NestedGrid, {\n          input: input,\n          wordList: wordList,\n          row: row,\n          savedColor: savedColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-two\",\n        children: /*#__PURE__*/_jsxDEV(NestedGrid, {\n          input: \"\",\n          wordList: [[\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"]],\n          row: rowB,\n          savedColor: savedColorB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: /*#__PURE__*/_jsxDEV(Keyboard, {\n        input: input,\n        updateInput: updateInput,\n        row: row,\n        updateRow: updateRow,\n        wordList: wordList,\n        updateWordList: updateWordList,\n        word: word,\n        usedLetters: usedLetters,\n        updateUsedLetters: updateUsedLetters,\n        updateShowWinPopUp: updateShowWinPopUp,\n        savedColor: savedColor,\n        updateSavedColor: updateSavedColor,\n        room: room,\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), showWinPopUp && /*#__PURE__*/_jsxDEV(WinPopUp, {\n      updateShowWinPopUp: updateShowWinPopUp,\n      className: \"winpopup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameContent, \"pEPxFGJbwmGqykK1uOokLBOPTr8=\");\n\n_c = GameContent;\nexport default GameContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameContent\");","map":{"version":3,"sources":["/Users/khoa/Documents/Study/CS160/NewApril24/Delivery-2/wordle/src/MultiplayerPage/GameContent.js"],"names":["React","useEffect","useState","NestedGrid","Keyboard","WinPopUp","GameContent","socket","room","word","input","setInput","row","setRow","wordList","setWordList","usedLetters","setUsedLetters","showWinPopUp","setShowWinPopUp","savedColor","setSavedColor","savedColorB","setSavedColorB","rowB","setRowB","updateInput","replace","updateRow","value","updateWordList","newArray","updateUsedLetters","updateShowWinPopUp","updateSavedColor","sendGameData","gameData","emit","on","data","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from \"react\";\nimport NestedGrid from \"../Components/GameGrid/GameGrid\";\nimport Keyboard from \"../Components/Keyboard/Keyboard\";\nimport WinPopUp from \"../HomePage/WinPopUp\";\nimport \"./GameContent.scss\";\n\nfunction GameContent({ socket, room, word }) {\n  // states for the user\n\n  const [input, setInput] = useState(\"\"); // user's input of the current row\n  const [row, setRow] = useState(0); // current row number, first row is row 0\n  const [wordList, setWordList] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]); // the words that the user entered so far\n  const [usedLetters, setUsedLetters] = useState([\"\"]); // feedback on each letter, N Y P\n  const [showWinPopUp, setShowWinPopUp] = useState(false); // whether or not show the win pop-up window\n  const [savedColor, setSavedColor] = useState([\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n  ]);\n\n  const [savedColorB, setSavedColorB] = useState([\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n    [\"\"],\n  ]);\n  const [rowB, setRowB] = useState(0);\n\n  function updateInput(replace) {\n    setInput(replace);\n  }\n\n  function updateRow(value) {\n    setRow(value);\n  }\n\n  function updateWordList(newArray) {\n    setWordList(newArray);\n  }\n\n  function updateUsedLetters(newArray) {\n    setUsedLetters(newArray);\n  }\n\n  function updateShowWinPopUp(value) {\n    setShowWinPopUp(value);\n  }\n\n  function updateSavedColor(newArray) {\n    setSavedColor(newArray);\n  }\n\n  // const sendGameData = () => {\n  //   const gameData = {\n  //     room: room,\n  //     username: username,\n  //     row: row,\n  //     wordList: wordList,\n  //     savedColor: savedColor,\n  //   };\n  //   socket.emit(\"send_data\", gameData);\n  // };\n\n  const sendGameData = () => {\n    const gameData = {\n      room: room,\n      row: row,\n      wordList: wordList,\n      savedColor: savedColor,\n    };\n    socket.emit(\"send_data\", gameData);\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_data\", (data) => {\n      console.log(\"received data from use Effect\", data);\n      setRowB(data.row);\n      setSavedColorB(data.savedColor);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    sendGameData();\n  }, [row, savedColorB]);\n\n  // function keyPress(e) {\n  //   if (e.key == \"Enter\") {\n  //     sendGameData();\n  //   }\n  // }\n\n  // React.useEffect(() => {\n  //   window.addEventListener(\"keydown\", keyPress);\n  // }, []);\n\n  return (\n    <div>\n      <div className=\"grid-container\">\n        <div className=\"grid-one\">\n          <NestedGrid\n            input={input}\n            wordList={wordList}\n            row={row}\n            savedColor={savedColor}\n          />\n        </div>\n        <div className=\"grid-two\">\n          <NestedGrid\n            input={\"\"}\n            wordList={[[\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"]]}\n            row={rowB}\n            savedColor={savedColorB}\n          />\n        </div>\n      </div>\n      <div className=\"keyboard\">\n        <Keyboard\n          input={input}\n          updateInput={updateInput}\n          row={row}\n          updateRow={updateRow}\n          wordList={wordList}\n          updateWordList={updateWordList}\n          word={word}\n          usedLetters={usedLetters}\n          updateUsedLetters={updateUsedLetters}\n          updateShowWinPopUp={updateShowWinPopUp}\n          savedColor={savedColor}\n          updateSavedColor={updateSavedColor}\n          room={room}\n          socket={socket}\n        />\n      </div>\n      {showWinPopUp && (\n        <WinPopUp\n          updateShowWinPopUp={updateShowWinPopUp}\n          className=\"winpopup\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GameContent;\n"]},"metadata":{},"sourceType":"module"}